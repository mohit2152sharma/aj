apiVersion: apps/v1
kind: Deployment
metadata:
  name: observability-a
  namespace: observability
  labels:
    app: observability-a
spec:
  replicas: 2
  selector:
    matchLabels:
      app: observability-a
  template:
    metadata:
      labels:
        app: observability-a
    spec:
      serviceAccountName: collector
      containers:
        - name: observability
          image: asia-south1-docker.pkg.dev/saral-458210/dev-opentelemetry/observability:latest
          ports:
            - containerPort: 8000
          env:
            - name: PORT
              value: "8000"
            - name: HOST
              value: "0.0.0.0"
            - name: GOOGLE_CLOUD_PROJECT
              value: "saral-458210"
            - name: SERVICE_VERSION
              value: "1.0.0"
            - name: OTEL_SERVICE_NAME
              value: "observability-a"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=observability-a,service.version=1.0.0"
            # Downward API envs to enable GKE resource detection
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONTAINER_NAME
              value: "observability-a"
            - name: PEER_SERVICE_BASE_URL
              value: "http://observability-b-service"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /greet/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /greet/health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: observability-a-service
  namespace: observability
  labels:
    app: observability-a
spec:
  selector:
    app: observability-a
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: observability-b
  namespace: observability
  labels:
    app: observability-b
spec:
  replicas: 2
  selector:
    matchLabels:
      app: observability-b
  template:
    metadata:
      labels:
        app: observability-b
    spec:
      serviceAccountName: collector
      containers:
        - name: observability
          image: asia-south1-docker.pkg.dev/saral-458210/dev-opentelemetry/observability:latest
          ports:
            - containerPort: 8000
          env:
            - name: PORT
              value: "8000"
            - name: HOST
              value: "0.0.0.0"
            - name: GOOGLE_CLOUD_PROJECT
              value: "saral-458210"
            - name: SERVICE_VERSION
              value: "1.0.0"
            - name: OTEL_SERVICE_NAME
              value: "observability-b"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=observability-b,service.version=1.0.0"
            # Downward API envs to enable GKE resource detection
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONTAINER_NAME
              value: "observability-b"
            - name: PEER_SERVICE_BASE_URL
              value: "http://observability-a-service"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /greet/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /greet/health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: observability-b-service
  namespace: observability
  labels:
    app: observability-b
spec:
  selector:
    app: observability-b
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
  type: ClusterIP
